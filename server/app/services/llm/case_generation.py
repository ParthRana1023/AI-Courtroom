# app/services/llm/case_generation.py
import random
import string
import re
from app.utils.llm import llm  # Import the llm instance
from langchain_core.prompts import ChatPromptTemplate
from langchain_core.output_parsers import StrOutputParser

async def generate_case(sections: int, numbers: list[int]) -> dict:
    """
    Generates a hypothetical legal case file using an LLM.

    Args:
        sections (int): The number of IPC sections involved (currently not explicitly used in the prompt template below but can be incorporated if needed).
        numbers (list[int]): A list of IPC section numbers (currently not explicitly used in the prompt template below but can be incorporated if needed).

    Returns:
        dict: A dictionary containing the case details:
              - cnr (str): Case Number Registry.
              - details (str): The raw text generated by the LLM.
              - formatted_details (str): HTML formatted case details.
              - status (str): Initial status "not started".
    Raises:
        Exception: If any error occurs during LLM invocation or processing.
    """
    
    ipc_section_numbers_str = ", ".join(map(str, numbers)) if numbers else "XXX"  # Default if no numbers provided
    number_of_ipc_sections = sections

    template = f""" 
        Draft a hypothetical case file for a legal proceeding involving {number_of_ipc_sections} specific sections of the Indian Penal Code (IPC), namely sections {ipc_section_numbers_str}.
        The final document MUST strictly follow official court petition format, using precise legal language, markdown for emphasis, and comprehensive details.
        Pay close attention to the formatting requirements, especially the use of markdown bolding (`**Header:**`) for all section titles and keywords as specified.

        **FORMATTING REQUIREMENTS:**
        - All main section headers (e.g., "COURT DETAILS & CASE NUMBER", "PARTIES INVOLVED") MUST be in uppercase and bolded (e.g., `**COURT DETAILS & CASE NUMBER:**`).
        - Sub-headers or key terms within sections (e.g., "Petitioner:", "Respondents:", "IPC Sections:") MUST be bolded.
        - Lists should use numbered or bulleted points as appropriate.
        - Ensure all text adheres to the structure outlined below.

        **STRUCTURE AND CONTENT GUIDELINES:**

        **COURT DETAILS & CASE NUMBER:**
        - Start with: `**IN THE [Specify Court Name and Jurisdiction, e.g., HIGH COURT OF DELHI AT NEW DELHI]**`
        - Follow with: `**CASE NO.: [Invent a standardized case number, e.g., W.P.(Crl.) 1234/2024]**`
        - Optionally include: `**CNR Number: [Invent a CNR Number, e.g., DLCT01-001234-2024]**`
        - Note: Use real-world Indian locations.

        **IN THE MATTER OF:**
        - `**[Detailed Title of the Case, e.g., State vs. Accused Name(s) OR Petitioner Name vs. Respondent Name(s)]**`
        - This section should clearly state the nature of the case.

        **BETWEEN:**

        **[Full Name of Petitioner/Applicant]**
        [Age], [Occupation],
        Residing at: [Full Address of Petitioner/Applicant]
        ... **PETITIONER** / **APPLICANT**

        **AND**

        1. **[Full Name of Respondent 1/Accused 1]**
           [Age], [Occupation],
           Residing at: [Full Address of Respondent 1/Accused 1]
        2. **[Full Name of Respondent 2/Accused 2]** (if applicable)
           [Age], [Occupation],
           Residing at: [Full Address of Respondent 2/Accused 2]
        ... **RESPONDENTS** / **ACCUSED**
        - Note: Invent fictitious names and use authentic real-world Indian locations.

        **PETITION UNDER SECTION [Relevant Act, e.g., 482 of Cr.P.C. or Article 226 of the Constitution] READ WITH IPC SECTIONS {ipc_section_numbers_str}:**
        - Clearly title the petition, incorporating the provided IPC sections {ipc_section_numbers_str}.
        - Example: `**PETITION UNDER SECTION 482 OF THE CODE OF CRIMINAL PROCEDURE, 1973 READ WITH IPC SECTIONS {ipc_section_numbers_str} FOR QUASHING OF FIR NO. [XYZ/YYYY]**`

        **MOST RESPECTFULLY SHEWETH (FORMAL PETITION):**
        1. That the present petition is being filed by the Petitioner/Applicant seeking [Specific Relief, e.g., quashing of FIR, grant of bail, etc.] in connection with IPC Sections {ipc_section_numbers_str}.
        2. [Further points summarizing the purpose of the application, legal heirs, claims, etc., incorporating the {number_of_ipc_sections} IPC sections involved.]
        ---

        **BACKGROUND AND CHRONOLOGY OF EVENTS:**
        - Provide a structured timeline of key events. Use the format: `- **[Date in DD/MM/YYYY or Month Day, YYYY format]:** [Description of event]`
        - Example: `- **15/07/2023:** FIR No. [XYZ/YYYY] was registered at Police Station [Name] under IPC Sections {ipc_section_numbers_str}.`
        - Highlight any events involving alleged breaches or issues related to the applicable IPC sections {ipc_section_numbers_str}.
        ---

        **GROUNDS:**
        - List the specific legal grounds for the petition. Use the format: `1. **[Ground Title, e.g., Lack of Prima Facie Case]:** [Detailed explanation of the ground, explicitly referencing relevant IPC sections like {ipc_section_numbers_str} where applicable.]`
        - Example: `1. **Violation of Fundamental Rights (Article 21):** The investigation conducted by the police was unfair and biased, violating the petitioner's right to life and personal liberty, particularly in the context of the allegations under IPC Section {numbers[0] if numbers else 'XXX'}.`
        - Detail allegations such as fraud, suppression of facts, procedural defects, citing discrepancies, medical conditions, or suspicious circumstances, and connect them to the {number_of_ipc_sections} IPC sections involved ({ipc_section_numbers_str}).
        ---

        **EVIDENCE (IF APPLICABLE):**
        - Provide a detailed presentation of evidence.
        - **Eyewitness Testimonies:**
          - `- **Witness Name:** [Full Name], Age: [Age], Address: [Full Address]`
          - `  **Testimony:** [Detailed summary of testimony, including date, time, location of event, and how it supports the case, referencing IPC sections {ipc_section_numbers_str}. Ensure the testimony is a narrative, not just bullet points.]`
        - **Physical/Digital Evidence:**
          - `- **[Evidence Title/Type, e.g., Medical Report]:** (Reference No: [Ref No]) [Detailed description and its relevance to IPC Sections {ipc_section_numbers_str}.]`
        - Note: Create fictitious witness names and use real-world Indian locations.
        ---

        **PRAYER (RELIEFS SOUGHT):**
        The Petitioner/Applicant therefore most humbly prays that this Hon'ble Court may be pleased to:
        1. [Specific prayer, e.g., Quash FIR No. [XYZ/YYYY] registered under IPC Sections {ipc_section_numbers_str}.]
        2. [Another specific prayer, e.g., Grant interim stay on further proceedings.]
        3. Pass any other order(s) as this Hon'ble Court may deem fit and proper in the facts and circumstances of the case.
        - Where relevant, relate these reliefs to the specific IPC provisions ({ipc_section_numbers_str}) cited earlier.
        ---

        **VERIFICATION:**
        Verified at [Place] on this [Day] day of [Month], [Year] that the contents of the above petition are true and correct to the best of my knowledge and belief and nothing material has been concealed therefrom.

        **[Signature]**
        **PETITIONER/APPLICANT**

        Through:

        **[Signature]**
        **[Advocate's Name]**
        Advocate
        Enrollment No: [Number]
        Address: [Advocate's Office Address]
        Date: [DD/MM/YYYY]
        Place: [Place]

        Ensure the final output strictly mimics an official court petition. Use markdown bolding for all specified headers and keywords.
    """

    prompt = ChatPromptTemplate.from_messages([
        ('system', template)
    ])

    chain = prompt | llm | StrOutputParser()

    try:
        # Use await for async chain invocation as llm is ChatOpenAI and the function is async
        llm_response_details = await chain.ainvoke({})
        
        # Generate a CNR (Case Number Registry)
        cnr = ''.join(random.choices(string.ascii_uppercase + string.digits, k=16))
        
        def extract_title(case_text: str) -> str:
            """Extract just the title from case text for display purposes"""
            # Simple regex to extract title from case text
            import re
            title_match = re.search(r'\*\*IN THE MATTER OF:\*\*\s*\n\*\*(.*?)\*\*', case_text, re.DOTALL)
            if title_match:
                return title_match.group(1).strip()
            # Alternative title pattern
            title_match = re.search(r'\*\*(Under Section.*?)\*\*', case_text)
            if title_match:
                return title_match.group(1).strip()
            return ""
            
        # Extract title from the raw LLM response
        title = extract_title(llm_response_details)
        
        return {
            "cnr": cnr,
            "details": llm_response_details,  # Raw LLM output
            "title": title,  # Store title directly in the Case model
            "status": "not started"
        }

    except Exception as e:
        # Log the error or handle it as appropriate for a backend service
        print(f"Error generating case with LLM: {str(e)}")
        # Re-raise the exception or return an error structure if the calling code expects it
        raise